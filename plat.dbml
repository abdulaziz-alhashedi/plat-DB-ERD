Project platDB {
  database_type : "MySQL"
  Note: '''
  نظام إدارة شركة تأجير السيارات
  تم استخدام Enums لتحسين بنية البيانات وضمان اتساقها
  '''
}

// Enum Definitions
enum gender {
  male
  female
}

enum transaction_type {
  receipt
  payment
}

enum transaction_status {
  pending
  completed
  cancelled
}

enum operation_type {
  new_contract
  renewal
  extension
  payment
  refund
}

enum rental_type {
  daily
  monthly
  hourly
  weekly
}

enum contract_type {
  normal
  vip
  commercial
  government
  corporate
}

enum insurance_type {
  comprehensive
  third_party
  basic
  premium
}

enum payment_type {
  cash
  card
  invoice
  deferred
  bank_transfer
}

enum plate_type {
  private
  commercial
  diplomatic
  government
  temporary
}

enum car_status {
  available
  rented
  maintenance
  out_of_service
  sold
  transferred
}

enum identity_type {
  national_id
  passport
  iqama
  driving_license
  business_license
}

enum account_type {
  cash
  client
  user
  expense
  revenue
  asset
  liability
  equity
  other
}

enum account_sub_type {
  system
  client
  user
  bank
  cash
  other
}

enum tax_applies_to {
  all
  rentals
  services
}

enum movement_type {
  debit
  credit
}

enum payment_schedule_status {
  pending
  paid
  overdue
  cancelled
}

// Additional useful enums
enum car_availability {
  available
  unavailable
  maintenance
  rented
  reserved
}

enum contract_status {
  active
  completed
  cancelled
  suspended
  expired
}

enum document_status {
  pending
  approved
  rejected
  expired
}

enum notification_type {
  email
  sms
  push
  system
}

enum audit_action {
  create
  update
  delete
  login
  logout
}

Table locations {
  location_id     int  [pk, increment]
  location_name   varchar(100) [not null]
  address         varchar(255)
  city            varchar(50)
  region          varchar(50)
  latitude        decimal(10,8)
  longitude       decimal(11,8)
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table months {
  month_id        int         [pk, increment]
  month_number    int         [unique, not null] // رقم الشهر (1-12)
  month_name_ar   varchar(20) [not null] // اسم الشهر بالعربية
  month_name_en   varchar(20) [not null] // اسم الشهر بالإنجليزية
}

Table branch_targets {
  target_id                         int         [pk, increment]
  branch_id                         int         [ref: > branches.branch_id] // الفرع
  month_id                          int         [ref: > months.month_id] // الشهر
  target_amount                     decimal(10,2) [default: 0.00] // مبلغ التارجت
  // Target settings (إعدادات التارجت)
  commission_calculation_percentage  int         [default: 100] // حتى يتم احتساب عمولة الموظف يجب أكمال التارجت المطلوب بنسبة %
  target_achievement_percentage      decimal(5,2) [default: 1.0] // من تم تحقيق التارجت المطلوب %
  calculate_commission_full_amount   boolean     [default: false] // احتساب العمولة على كامل المبلغ
  minimum_rent_additional            int         [default: 85] // سعر الإيجار الأدنى + X ويجب بحسب بنع %
  minimum_rent_base                  int         [default: 30] // القيمة الأساسية للإيجار الأدنى
  created_at                        datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at                        datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (branch_id, month_id) [unique] // منع تكرار نفس الشهر لنفس الفرع
  }
}

Table services {
  service_id      int         [pk, increment]
  service_name_ar varchar(100) [not null] // اسم الخدمة بالعربية
  service_name_en varchar(100) // اسم الخدمة بالإنجليزية
  description     text        // وصف الخدمة
  is_active       boolean     [default: true] // فعال/غير فعال
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table branch_services {
  branch_service_id int [pk, increment]
  branch_id         int [ref: > branches.branch_id] // الفرع
  service_id        int [ref: > services.service_id] // الخدمة
  is_active         boolean [default: true] // الخدمة فعالة في هذا الفرع
  start_date        date // تاريخ بداية الخدمة
  end_date          date // تاريخ انتهاء الخدمة (اختياري)
  notes             text // ملاحظات خاصة بالخدمة في هذا الفرع
  created_at        datetime [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (branch_id, service_id) [unique] // منع تكرار نفس الخدمة لنفس الفرع
  }
}

Table branches {
  branch_id                         int         [pk, increment]
  branch_code                       varchar(10) [unique, not null] // كود الفرع
  branch_name_ar                    varchar(100) [not null] // الاسم العربي
  branch_name_en                    varchar(100) // الاسم الإنجليزي
  location_id                       int         [ref: > locations.location_id] // الموقع من جدول منفصل    
  // Contact Information
  phone_number                      varchar(20) // هاتف الفرع
  license_number                    varchar(50) // رقم ترخيص الفرع
  branch_license_number             varchar(50) // رقم ترخيص الفرع
 //responsible manager information
  responsible_manager_name          varchar(100) // المدير المسؤول
  responsible_manager_mobile        varchar(20) // جوال المدير المسؤول
  //branch information
  branch_email                      varchar(100) // البريد الإلكتروني (تبع الفرع)
  branch_address                    varchar(100)
  

  // Additional branch settings from new image
  max_count                         int         [default: 1000] // العدد الأقصى (1000 في الصورة)
  security_camera_link              varchar(255) // رابط كاميرا المراقبة
  fingerprint_system_link           varchar(255) // رابط نظام البصمة
  rental_sequence_start             int         [default: 1] // بداية تسلسل المؤجر
  documents_sequence_start          int         [default: 1] // بداية تسلسل السندات
  // Branch limitations and features
  no_document_updates               boolean     [default: false] // لا يوجد طقورات للسندات لعدم امكانية المقر بتحديث الاسعار
  no_check_visa_payment             boolean     [default: false] // هذا الفرع لا يدعم القبض بالشيكة او فيزا
  // Operating hours
  opening_time                      time        // بداية عمل البرنامج يوميا عند الساعة
  closing_time                      time        // إغلاق البرنامج يوميا عند الساعة
  created_at                        datetime [default: `CURRENT_TIMESTAMP`]
  updated_at                        datetime [default: `CURRENT_TIMESTAMP`]
}

// جداول إدارة المستخدمين والصلاحيات

Table permission_groups {
  group_id        int         [pk, increment]
  group_name      varchar(100) [not null] // اسم مجموعة الصلاحيات
  description     text        // وصف المجموعة
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table permissions {
  permission_id   int         [pk, increment]
  permission_key  varchar(50) [unique, not null] // مفتاح الصلاحية
  description     varchar(255) [not null] // وصف الصلاحية
  category        varchar(50) // تصنيف الصلاحية
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table permission_group_permissions {
  id              int         [pk, increment]
  group_id        int         [ref: > permission_groups.group_id]
  permission_id   int         [ref: > permissions.permission_id]
  
  indexes {
    (group_id, permission_id) [unique] // لمنع تكرار الصلاحية في نفس المجموعة
  }
}

Table users {
  user_id         int         [pk, increment]
  job_number      varchar(20) // الرقم الوظيفي
  name_ar         varchar(100) [not null] // الاسم العربي
  name_en         varchar(100) // الاسم الإنجليزي
  password        varchar(255) [not null] // كلمة المرور (مشفرة)
  branch_id       int         [ref: > branches.branch_id] // الفرع التابع له
  permission_group_id int     [ref: > permission_groups.group_id] // مجموعة الصلاحيات
  is_active       boolean     [default: true] // تفعيل دخول المستخدم
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

// جداول نظام أسطول السيارات

Table car_brands {
  brand_id       int         [pk, increment]
  brand_name_ar  varchar(50) [not null] // اسم الماركة بالعربية
  brand_name_en  varchar(50) // اسم الماركة بالإنجليزية
  is_active      boolean     [default: true]
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
}

Table car_models {
  model_id       int         [pk, increment]
  brand_id       int         [ref: > car_brands.brand_id] // الماركة التابع لها
  model_name_ar  varchar(50) [not null] // اسم الطراز بالعربية
  model_name_en  varchar(50) // اسم الطراز بالإنجليزية
  is_active      boolean     [default: true]
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (brand_id, model_name_ar) [unique] // منع تكرار نفس الطراز لنفس الماركة
  }
}

Table car_categories {
  category_id    int         [pk, increment]
  category_name_ar varchar(50) [not null, unique] // اسم الفئة بالعربية
  category_name_en varchar(50) // اسم الفئة بالإنجليزية
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
}

Table cars {
  car_id          int         [pk, increment]
  car_status      car_status  [note: 'وضع السيارة']
  plate_number    varchar(20) [unique, not null, note: 'رقم اللوحة']
  car_category_id int         [ref: > car_categories.category_id, note: 'تصنيف فئة السيارة']
  plate_type      plate_type  [note: 'نوع تسجيل اللوحة']
  brand_id        int         [ref: > car_brands.brand_id, note: 'ماركة السيارة']
  model_id        int         [ref: > car_models.model_id, note: 'طراز السيارة']
  serial_number   varchar(50) [unique, note: 'الرقم التسلسلي (رقم الهيكل/الشاصي)']
  payload         int         [default: 5, note: 'الحمولة']
  vehicle_weight  int         [default: 0, note: 'وزن المركبة']
  odometer_reading int        [default: 0, note: 'عداد الكيلومتر']
  
  // Owner and User Info
  owner_name            varchar(100) [note: 'اسم المالك']
  owner_id_number       varchar(50)  [unique, note: 'رقم هوية المالك']
  actual_user_name      varchar(100) [note: 'اسم المستخدم الفعلي']
  actual_user_id_number varchar(50)  [unique, note: 'رقم هوية المستخدم الفعلي']

  // Insurance Info
  insurance_type        insurance_type [note: 'نوع التأمين']
  insurance_company_name  varchar(100) [note: 'اسم شركة التأمين']
  insurance_policy_number varchar(50)  [unique, note: 'رقم بوليصة التأمين']
  insurance_value         decimal(10,2) [default: 0.00, note: 'قيمة التأمين']
  deductible_amount       decimal(10,2) [default: 4500.00, note: 'قسط التحمل']
  
  // Financial, Tamm, and Tracking Info
  purchase_date                 date          [note: 'تاريخ الشراء']
  purchase_price                decimal(10,2) [default: 0.00, note: 'سعر الشراء']
  depreciation_years            int           [default: 4, note: 'عدد سنوات الإهلاك']
  cwa_insurance_rent_increase   decimal(10,2) [default: 0.00, note: 'زيادة سعر الايجار في حال التأمين CWA']
  tamm_user_name                varchar(100)  [note: 'اسم المستخدم في تم']
  tamm_password                 varchar(255)  [note: 'كلمة السر في تم']
  copy_number                   int           [default: 0, note: 'رقم النسخة']
  technical_link_user_name      varchar(100)  [note: 'اسم المستخدم الربط التقني نقل']
  gps_track_imei                varchar(50)   [unique, note: 'GPS Track imei']

  has_tracking_device boolean [default: false, note: 'السيارة تتبع جهاز تتبع']
  oil_expiry_days int         [default: 0, note: 'صلاحية انتهاء الزيت بالأيام']
  // Expiry Dates
  form_license_expiry_date_gregorian      date         [note: 'تاريخ انتهاء الاستمارة/الرخصة (ميلادي)']
  form_license_expiry_date_hijri          varchar(10)  [note: 'تاريخ انتهاء الاستمارة/الرخصة (هجري)']
  insurance_policy_expiry_date_gregorian  date         [note: 'تاريخ انتهاء بوليصة التأمين (ميلادي)']
  insurance_policy_expiry_date_hijri      varchar(10)  [note: 'تاريخ انتهاء بوليصة التأمين (هجري)']
  periodic_inspection_expiry_date_gregorian date       [note: 'تاريخ انتهاء الفحص الدوري (ميلادي)']
  periodic_inspection_expiry_date_hijri     varchar(10)  [note: 'تاريخ انتهاء الفحص الدوري (هجري)']
  operation_card_expiry_date_gregorian    date         [note: 'تاريخ انتهاء كارد التشغيل (ميلادي)']
  operation_card_expiry_date_hijri        varchar(10)  [note: 'تاريخ انتهاء كارد التشغيل (هجري)']
  is_available    car_availability [default: 'available', note: 'حالة توفر السيارة']
  branch_id       int         [ref: > branches.branch_id, note: 'الفرع التابع له']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    plate_number [unique] // رقم اللوحة يجب أن يكون فريد
  }
}

Table rental_rates {
  rate_id         int         [pk, increment]
  car_id          int         [ref: > cars.car_id] // السيارة
  // الإيجار اليومي
  daily_rate      decimal(10,2) [default: 0.00] // سعر إيجار اليوم
  daily_minimum   decimal(10,2) [default: 0.00] // السعر الأدنى
  daily_allowed_km int        [default: 0] // كم المسموح يومياً
  // الإيجار بالساعة
  hourly_rate     decimal(10,2) [default: 0.00] // سعر إيجار الساعة
  hourly_delay_rate decimal(10,2) [default: 0.00] // سعر الساعة تأخير
  // الكيلومتر المفتوح
  open_km_rate    decimal(10,2) [default: 0.00] // سعر الكيلومتر المفتوح
  extra_km_rate   decimal(10,2) [default: 0.00] // سعر كم الزائد
  // الإيجار الشهري
  monthly_rate    decimal(10,2) [default: 0.00] // سعر إيجار الشهر
  monthly_minimum decimal(10,2) [default: 0.00] // السعر الأدنى للشهر
  monthly_allowed_km int      [default: 0] // كم المسموح شهرياً
  // الإيجار بالساعة (إضافي)
  hourly_extra_km_rate decimal(10,2) [default: 0.00] // سعر كم الساعة الزائد
  hourly_allowed_km int        [default: 0] // كم المسموح بالساعة
  hourly_rate_per_hour decimal(10,2) [default: 0.00] // سعر إيجار بالساعة
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    car_id [unique] // معدل إيجار واحد لكل سيارة
  }
}

Table oil_changes {
  oil_change_id      int         [pk, increment]
  car_id            int         [ref: > cars.car_id, note: 'السيارة']
  current_odometer  int         [not null, note: 'عداد الكيلو متر الحالي']
  oil_expiry_odometer int      [not null, note: 'ينتهي الزيت عند كم']
  change_date       date        [not null, note: 'تاريخ تغيير الزيت']
  amount            decimal(10,2) [default: 0.00, note: 'تكلفة تغيير الزيت']
  invoice_number    varchar(50)  [unique, note: 'رقم الفاتورة']
  supplier_name     varchar(100) [note: 'اسم المورد (اختياري)']
  notes             text         [note: 'ملاحظات']
  payment_type      payment_type [note: 'نوع الدفع (نقدي، غير نقدي، فاتورة، آجل ...)']
  car_id            int         [ref: > cars.car_id] // السيارة
  current_odometer  int         [not null] // عداد الكيلو متر الحالي
  oil_expiry_odometer int      [not null] // ينتهي الزيت عند كم
  change_date       date        [not null] // تاريخ تغيير الزيت
  amount            decimal(10,2) [default: 0.00] // تكلفة تغيير الزيت
  invoice_number    varchar(50)  // رقم الفاتورة
  supplier_name     varchar(100) // اسم المورد (اختياري)
  notes             text         // ملاحظات
  payment_type      varchar(30)  // نوع الدفع (نقدي، غير نقدي، فاتورة، آجل ...)
  created_at        datetime     [default: `CURRENT_TIMESTAMP`]
}

// جداول العملاء ومعلوماتهم

Table identity_types {
  identity_type_id   int         [pk, increment]
  identity_type_name_ar varchar(50) [not null, unique] // نوع الهوية بالعربية
  identity_type_name_en varchar(50) // نوع الهوية بالإنجليزية
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table nationalities {
  nationality_id     int         [pk, increment]
  nationality_name_ar varchar(50) [not null, unique] // الجنسية بالعربية
  nationality_name_en varchar(50) // الجنسية بالإنجليزية
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table professions {
  profession_id      int         [pk, increment]
  profession_name_ar varchar(100) [not null, unique] // المهنة بالعربية
  profession_name_en varchar(100) // المهنة بالإنجليزية
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table client_categories {
  category_id        int         [pk, increment]
  category_name_ar   varchar(50) [not null, unique] // تصنيف العميل بالعربية (VIP، عادي، ذهبي...)
  category_name_en   varchar(50) // تصنيف العميل بالإنجليزية
  discount_percentage decimal(5,2) [default: 0.00] // نسبة خصم خاصة بالفئة
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table clients {
  client_id          int         [pk, increment]
  client_code        varchar(20) [unique, note: 'كود العميل']
  client_name        varchar(100) [unique, not null, note: 'اسم العميل']
  identity_type      identity_type [note: 'نوع الهوية']
  identity_number    varchar(50) [unique, not null, note: 'رقم الهوية']
  nationality_id     int         [ref: > nationalities.nationality_id, note: 'الجنسية']
  mobile_number      varchar(20) [unique, note: 'رقم الجوال']
  work_phone         varchar(20) [note: 'هاتف عمل']
  gender             gender      [note: 'الجنس']
  profession_id      int         [ref: > professions.profession_id, note: 'المهنة']
  client_category_id int         [ref: > client_categories.category_id, note: 'تصنيف العميل']
  passport_number    varchar(50) [unique, note: 'رقم الجواز للطيران']
  correspondence_address text    [note: 'عنوان المراسل']
  address            text        [note: 'العنوان']
  add_tax_percentage boolean     [default: false, note: 'إضافة الميل للضريبة']
  has_guarantor      boolean     [default: false, note: 'يوجد كفيل غارم / ضامن']
  
  // التواريخ الميلادية
  identity_expiry_gregorian date // انتهاء الهوية تاريخ ميلادي
  birth_date_gregorian     date  // تاريخ الميلاد الميلادي
  license_expiry_gregorian date  // انتهاء الرخصة تاريخ ميلادي
  
  // التواريخ الهجرية
  identity_expiry_hijri    varchar(20) // انتهاء الهوية هجري
  birth_date_hijri         varchar(20) // تاريخ الميلاد الهجري
  license_expiry_hijri     varchar(20) // انتهاء الرخصة هجري
  
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at         datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    identity_number [unique] // رقم الهوية يجب أن يكون فريد
  }
}

Table contracts {
  contract_id             int         [pk, increment]
  contract_number         varchar(50) [unique, not null]

  client_id               int         [ref: > clients.client_id, not null]
  car_id              int         [ref: > cars.car_id, not null]
  branch_id               int         [ref: > branches.branch_id, not null]

  contract_type           contract_type [note: 'نوع العقد']
  rental_type             rental_type [note: 'نوع الإيجار']
  rental_days             int         [note: 'عدد أيام الإيجار']
  kilometers_allowed      int         [note: 'الكيلومترات المسموحة']
  daily_km_limit          int         [note: 'الحد اليومي للكيلومترات']
  extra_km_price          decimal(10,2) [note: 'سعر الكيلومتر الإضافي']

  start_datetime          datetime [not null]
  end_datetime            datetime [not null]
  start_datetime_hijri    varchar(20)
  end_datetime_hijri      varchar(20)

  insurance_type          insurance_type [note: 'نوع التأمين']
  daily_rate              decimal(10,2) [note: 'السعر اليومي']
  discount                decimal(10,2) [note: 'الخصم']
  amount_due              decimal(10,2) [not null, note: 'المبلغ المستحق']
  amount_paid             decimal(10,2) [not null, note: 'المبلغ المدفوع']
  payment_method_id       int [ref: > payment_methods.method_id, note: 'طريقة الدفع']

  status                  contract_status [default: 'active', note: 'حالة العقد']
  is_booking              boolean [default: false, note: 'حجز']
  notes                   text [note: 'ملاحظات']
  created_by              int [ref: > users.user_id, note: 'تم الإنشاء بواسطة']
  created_at              datetime [default: `CURRENT_TIMESTAMP`]
  updated_at              datetime [default: `CURRENT_TIMESTAMP`]

  indexes {
    // plate_number [unique] // رقم اللوحة يجب أن يكون فريد
  }
}

Table financial_transactions {
  transaction_id         int         [pk, increment]
  voucher_number         varchar(50) [unique, not null, note: 'رقم القسيمة']
  transaction_type       transaction_type [not null, note: 'نوع المعاملة']
  amount                 decimal(10,2) [not null, note: 'المبلغ']
  transaction_datetime   datetime    [not null, note: 'تاريخ ووقت المعاملة']
  status                 transaction_status [default: 'completed', note: 'الحالة']
  branch_id              int         [ref: > branches.branch_id, not null, note: 'الفرع']
  created_by             int         [ref: > users.user_id, not null, note: 'تم الإنشاء بواسطة']
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at             datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (voucher_number)
    (transaction_datetime)
    (branch_id)
    (status)
  }
}

Table contract_transactions {
  contract_transaction_id int       [pk, increment]
  transaction_id         int        [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  contract_id            int        [ref: > contracts.contract_id, note: 'العقد']
  operation_type         operation_type [note: 'نوع العملية']
  paper_contract_number  varchar(50) [unique, note: 'رقم العقد الورقي']
  
  indexes {
    (transaction_id) [unique]
    (contract_id)
    (operation_type)
  }
}

// إضافة جدول فئات المصاريف المفقود
Table expense_categories {
  category_id      int         [pk, increment]
  category_name_ar varchar(100) [not null] // اسم فئة المصروفات بالعربية
  category_name_en varchar(100) // اسم فئة المصروفات بالإنجليزية
  parent_id        int         [ref: > expense_categories.category_id] // للفئات الفرعية
  description      text        // وصف الفئة
  is_active        boolean     [default: true]
  created_at       datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at       datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (parent_id)
    (is_active)
  }
}

// تصحيح الإشارة في جدول expense_transactions
Table expense_transactions {
  expense_transaction_id int       [pk, increment]
  transaction_id         int       [ref: > financial_transactions.transaction_id]
  expense_category_id    int       [ref: > expense_categories.category_id]
  supplier_name          varchar(100)
  invoice_number         varchar(50)
  
  indexes {
    (transaction_id) [unique]
    (expense_category_id)
  }
}

// جدول تفاصيل الضرائب للمعاملات
Table transaction_taxes {
  tax_detail_id         int        [pk, increment]
  transaction_id        int        [ref: > financial_transactions.transaction_id]
  tax_id                int        [ref: > tax_settings.tax_id]
  tax_amount            decimal(10,2) [not null]
  tax_percentage        decimal(5,2)  [not null]
  
  indexes {
    (transaction_id)
  }
}

// جدول أرشفة العقود المنتهية
Table archived_contracts {
  archive_id              int         [pk, increment]
  original_contract_id    int         [not null] // المعرف الأصلي للعقد
  contract_number         varchar(50) [not null]
  client_id               int         [not null]
  car_id                  int         [not null]
  branch_id               int         [not null]
  contract_data           json        [not null] // بيانات العقد كاملة بتنسيق JSON
  start_datetime          datetime    [not null]
  end_datetime            datetime    [not null]
  archive_date            datetime    [default: `CURRENT_TIMESTAMP`]
  archived_by             int         [ref: > users.user_id]
  
  indexes {
    (original_contract_id) [unique]
    (contract_number)
    (client_id)
    (archive_date)
  }
}

// جدول أرشفة المعاملات المالية القديمة
Table archived_transactions {
  archive_id                int         [pk, increment]
  original_transaction_id   int         [not null] // المعرف الأصلي للمعاملة
  transaction_data          json        [not null] // بيانات المعاملة كاملة بتنسيق JSON
  archive_date              datetime    [default: `CURRENT_TIMESTAMP`]
  archived_by               int         [ref: > users.user_id]
  
  indexes {
    (original_transaction_id) [unique]
    (archive_date)
  }
}

// إضافة سياسة الأرشفة في جدول الإعدادات
Table system_settings {
  setting_id       int         [pk, increment]
  setting_key      varchar(50) [unique, not null]
  setting_value    text        [not null]
  setting_group    varchar(50) [not null]
  
  // إعدادات الأرشفة
  // archive_contracts_after_days: "365"
  // archive_transactions_after_days: "730"
  // archive_inactive_clients_after_days: "1095"
}

Table transaction_categories {
  category_id        int         [pk, increment]
  category_name      varchar(50) [not null]
  parent_id          int         [ref: > transaction_categories.category_id]
  affects_account_type enum('cash', 'client', 'expense', 'revenue') // نوع الحساب المتأثر
  is_active          boolean     [default: true]
  
  indexes {
    (parent_id)
    (is_active)
  }
}


Table accounts {
  account_id         int         [pk, increment]
  account_code       varchar(20) [unique, not null, note: 'كود الحساب']
  account_name       varchar(100) [unique, not null, note: 'اسم الحساب']
  account_type       account_type [not null, note: 'نوع الحساب']
  category_id        int         [ref: > account_categories.category_id, note: 'فئة الحساب']
  sub_type           account_sub_type [not null, note: 'النوع الفرعي']
  related_client_id  int         [ref: > clients.client_id, note: 'العميل المرتبط']
  related_user_id    int         [ref: > users.user_id, note: 'المستخدم المرتبط']
  opening_balance    decimal(12,2) [default: 0.00, note: 'الرصيد الافتتاحي']
  current_balance    decimal(12,2) [default: 0.00, note: 'الرصيد الحالي']
  is_active          boolean     [default: true]
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at         datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (account_type)
    (sub_type)
    (is_active)
    (related_client_id)
    (related_user_id)
  }
}

Table account_categories {
  category_id     int         [pk, increment]
  category_name   varchar(50) [not null]
  parent_id       int         [ref: > account_categories.category_id]
  is_active       boolean     [default: true]
  
  indexes {
    (parent_id)
    (is_active)
  }
}

Table tax_settings {
  tax_id          int         [pk, increment]
  tax_name        varchar(50) [not null]
  tax_percentage  decimal(5,2) [not null]
  is_active       boolean     [default: true]
  applies_to      tax_applies_to [default: 'all', note: 'يطبق على']
  start_date      date        [not null, note: 'تاريخ البداية']
  end_date        date        [note: 'تاريخ النهاية']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (is_active)
    (applies_to)
    (start_date, end_date)
  }
}

Table account_movements {
  movement_id        int         [pk, increment]
  account_id         int         [ref: > accounts.account_id, note: 'الحساب']
  transaction_id     int         [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  movement_type      movement_type [not null, note: 'نوع الحركة']
  amount             decimal(10,2) [not null, note: 'المبلغ']
  previous_balance   decimal(12,2) [not null, note: 'الرصيد السابق']
  new_balance        decimal(12,2) [not null, note: 'الرصيد الجديد']
  movement_date      datetime    [default: `CURRENT_TIMESTAMP`, note: 'تاريخ الحركة']
  
  indexes {
    (account_id)
    (transaction_id)
    (movement_date)
    (movement_type)
  }
}

Table transaction_category_mapping {
  mapping_id         int         [pk, increment]
  transaction_id     int         [ref: > financial_transactions.transaction_id]
  category_id        int         [ref: > transaction_categories.category_id]
  
  indexes {
    (transaction_id)
    (category_id)
  }
}



Table payment_methods {
  method_id        int           [pk, increment]
  name_ar          varchar(50)   [not null]
  name_en          varchar(50)
  is_active        boolean       [default: true]
}


Table shift_handovers {
  handover_id       int [pk, increment]
  from_user_id      int [ref: > users.user_id]
  to_user_id        int [ref: > users.user_id]
  cash_amount       decimal(10,2)
  network_receipts  decimal(10,2)
  handover_time     datetime [default: `CURRENT_TIMESTAMP`]
  created_by        int [ref: > users.user_id]
}

Table administrative_expenses {
  expense_id        int [pk, increment]
  transaction_id    int [ref: > financial_transactions.transaction_id]
  category          varchar(100)
  description       text
  created_at        datetime [default: `CURRENT_TIMESTAMP`]
}



Table contract_payments_schedule {
  schedule_id     int         [pk, increment]
  contract_id     int         [ref: > contracts.contract_id, not null, note: 'العقد']
  payment_date    date        [not null, note: 'تاريخ الدفع']
  amount_due      decimal(10,2) [not null, note: 'المبلغ المستحق']
  status          payment_schedule_status [default: 'pending', note: 'الحالة']
  transaction_id  int         [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  reminder_sent   boolean     [default: false, note: 'تم إرسال التذكير']
  notes           text [note: 'ملاحظات']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (contract_id, payment_date)
    (status, payment_date)
  }
}