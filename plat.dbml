Project platDB {
  database_type : "MySQL"
  Note: '''
  نظام إدارة شركة تأجير السيارات
  تم استخدام Enums لتحسين بنية البيانات وضمان اتساقها
  '''
}

// Enum Definitions
enum gender {
  male
  female
}

enum transaction_status {
  pending
  completed
  cancelled
}

enum operation_type {
  new_contract
  renewal
  extension
  payment
  refund
}

enum rental_type {
  daily
  monthly
  hourly
  weekly
}

enum contract_type {
  normal
  vip
  commercial
  government
  corporate
}

enum insurance_type {
  comprehensive
  third_party
  basic
  premium
}

enum payment_type {
  cash
  card
  invoice
  deferred
  bank_transfer
}

enum plate_type {
  private
  commercial
  diplomatic
  government
  temporary
}

enum car_status {
  available
  rented
  maintenance
  out_of_service
  sold
  transferred
}

enum identity_type {
  national_id
  passport
  iqama
  driving_license
  business_license
}

enum account_type {
  cash
  client
  user
  expense
  revenue
  asset
  liability
  equity
  other
}

enum account_sub_type {
  system
  client
  user
  bank
  cash
  other
}

enum tax_applies_to {
  all
  rentals
  services
}

enum movement_type {
  debit
  credit
}

enum payment_schedule_status {
  pending
  paid
  overdue
  cancelled
}

// Additional useful enums
enum car_availability {
  available
  unavailable
  maintenance
  rented
  reserved
}

enum contract_status {
  active
  completed
  cancelled
  suspended
  expired
}

enum document_status {
  pending
  approved
  rejected
  expired
}

enum notification_type {
  email
  sms
  push
  system
}

enum audit_action {
  create
  update
  delete
  login
  logout
}

Table locations {
  location_id     int  [pk, increment]
  location_name   varchar(100) [unique, not null, note: 'اسم الموقع']
  address         varchar(255) [note: 'عنوان الموقع']
  city_id          int [ref: > cities.city_id, not null]
  region          varchar(50) [note: 'المنطقة']
  latitude        decimal(10,8) [note: 'خط العرض']
  longitude       decimal(11,8) [note: 'خط الطول']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table months {
  month_id        int         [pk, increment]
  month_number    int         [unique, not null, note: 'رقم الشهر (1-12)']
  month_name_ar   varchar(20) [unique, not null, note: 'اسم الشهر بالعربية']
  month_name_en   varchar(20) [unique, not null, note: 'اسم الشهر بالإنجليزية']
}

Table branch_targets {
  target_id                         int         [pk, increment]
  branch_id                         int         [ref: > branches.branch_id, note: 'الفرع']
  month_id                          int         [ref: > months.month_id, note: 'الشهر']
  target_amount                     decimal(10,2) [default: 0.00, note: 'مبلغ التارجت']
  // Target settings (إعدادات التارجت)
  commission_calculation_percentage  int         [default: 100, note: 'حتى يتم احتساب عمولة الموظف يجب أكمال التارجت المطلوب بنسبة %']
  target_achievement_percentage      decimal(5,2) [default: 1.0, note: 'من تم تحقيق التارجت المطلوب %']
  calculate_commission_full_amount   boolean     [default: false, note: 'احتساب العمولة على كامل المبلغ']
  minimum_rent_additional            int         [default: 85, note: 'سعر الإيجار الأدنى + X ويجب بحسب بنع %']
  minimum_rent_base                  int         [default: 30, note: 'القيمة الأساسية للإيجار الأدنى']
  created_at                        datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at                        datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (branch_id, month_id) [unique, note: 'منع تكرار نفس الشهر لنفس الفرع']
  }
}





Table branches {
  branch_id                         int         [pk, increment]
  branch_code                       varchar(10) [unique, not null, note: 'كود الفرع']
  branch_name_ar                    varchar(100) [unique, not null, note: 'الاسم العربي']
  branch_name_en                    varchar(100) [note: 'الاسم الإنجليزي']
  location_id                       int         [ref: > locations.location_id, note: 'الموقع من جدول منفصل']    
  // Contact Information
  phone_number                      varchar(20) [note: 'هاتف الفرع']
  license_number                    varchar(50) [note: 'رقم ترخيص الفرع']
  branch_license_number             varchar(50) [note: 'رقم ترخيص الفرع']
 //responsible manager information
  responsible_manager_name          varchar(100) [note: 'المدير المسؤول']
  responsible_manager_mobile        varchar(20) [note: 'جوال المدير المسؤول']
  //branch information
  branch_email                      varchar(100) [note: 'البريد الإلكتروني (تبع الفرع)']
  branch_address                    varchar(100) [note: 'عنوان الفرع']
  
  // Branch Type Flags from image
  is_rental_office                  boolean     [default: false, note: 'الفرع عبارة عن مكتب تأجير']
  is_maintenance_center             boolean     [default: false, note: 'الفرع عبارة عن مركز صيانة']
  is_limousine_office               boolean     [default: false, note: 'الفرع عبارة عن مكتب ليموزين']
  manages_excluded_cars             boolean     [default: false, note: 'الفرع يتعامل مع سيارات مستبعدة']
  supports_employee_car_service     boolean     [default: false, note: 'الفرع يدعم خدمة سيارات الموظفين']
  supports_shifts_system            boolean     [default: false, note: 'الفرع يدعم نظام الورديات']

  // Branch Laws / Settings from image
  max_suspended_contracts           int         [default: 1000, note: 'أقصى عدد لتعليق العقود للفرع']
  security_camera_link              varchar(255) [note: 'رابط كاميرا المراقبة']
  tracking_system_link              varchar(255) [note: 'رابط نظام التتبع (كان اسمه fingerprint_system_link)']
  contract_sequence_start           int         [default: 1, note: 'بداية تسلسل رزمة العقود (كان اسمه rental_sequence_start)']
  document_bundle_sequence_start    int         [default: 1, note: 'بداية تسلسل رزمة السندات (كان اسمه documents_sequence_start)']
  // Branch limitations and features
  contract_includes_document        boolean     [default: false, note: 'لا يوجد مطبوعات للسندات لحالها بل العقد متضمن السند (كان اسمه no_document_updates)']
  supports_card_payment             boolean     [default: true, note: 'هذا الفرع يدعم القبض بالشبكة أو فيزا (كان اسمه no_check_visa_payment)']
  // Operating hours
  opening_time                      time        [note: 'بداية عمل البرنامج يوميا عند الساعة']
  closing_time                      time        [note: 'إغلاق البرنامج يوميا عند الساعة']
  created_at                        datetime [default: `CURRENT_TIMESTAMP`]
  updated_at                        datetime [default: `CURRENT_TIMESTAMP`]
}

// جداول إدارة المستخدمين والصلاحيات

Table permission_groups {
  group_id        int         [pk, increment]
  group_name      varchar(100) [unique, not null, note: 'اسم مجموعة الصلاحيات']
  description     text        [note: 'وصف المجموعة']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table permissions {
  permission_id   int         [pk, increment]
  permission_key  varchar(50) [unique, not null, note: 'مفتاح الصلاحية']
  description     varchar(255) [unique, not null, note: 'وصف الصلاحية']
  category        varchar(50) [note: 'تصنيف الصلاحية']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table permission_group_permissions {
  id              int         [pk, increment]
  group_id        int         [ref: > permission_groups.group_id]
  permission_id   int         [ref: > permissions.permission_id]
  
  indexes {
    (group_id, permission_id) [unique, note: 'لمنع تكرار الصلاحية في نفس المجموعة']
  }
}

Table users {
  user_id         int         [pk, increment]
  job_number      varchar(20) [unique, note: 'الرقم الوظيفي']
  name_ar         varchar(100) [unique, not null, note: 'الاسم العربي']
  name_en         varchar(100) [note: 'الاسم الإنجليزي']
  password        varchar(255) [unique, not null, note: 'كلمة المرور (مشفرة)']
  branch_id       int         [ref: > branches.branch_id, note: 'الفرع التابع له']
  permission_group_id int     [ref: > permission_groups.group_id, note: 'مجموعة الصلاحيات']
  is_active       boolean     [default: true, note: 'تفعيل دخول المستخدم']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

// جداول نظام أسطول السيارات

Table car_brands {
  brand_id       int         [pk, increment]
  brand_name_ar  varchar(50) [unique, not null, note: 'اسم الماركة بالعربية']
  brand_name_en  varchar(50) [unique, note: 'اسم الماركة بالإنجليزية']
  is_active      boolean     [default: true]
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
}

Table car_models {
  model_id       int         [pk, increment]
  brand_id       int         [ref: > car_brands.brand_id, note: 'الماركة التابع لها']
  model_name_ar  varchar(50) [unique, not null, note: 'اسم الطراز بالعربية']
  model_name_en  varchar(50) [unique, note: 'اسم الطراز بالإنجليزية']
  is_active      boolean     [default: true]
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (brand_id, model_name_ar) [unique, note: 'منع تكرار نفس الطراز لنفس الماركة']
  }
}

Table car_colors {
  color_id       int         [pk, increment]
  color_name_ar  varchar(30) [not null, unique] // اسم اللون بالعربية
  color_name_en  varchar(30) // اسم اللون بالإنجليزية
  color_code     varchar(20) // كود اللون
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
}

Table car_categories {
  category_id    int         [pk, increment]
  category_name_ar varchar(50) [unique, not null, note: 'اسم الفئة بالعربية']
  category_name_en varchar(50) [unique, note: 'اسم الفئة بالإنجليزية']
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
}

Table cars {
  car_id          int         [pk, increment]
  car_status      car_status  [note: 'وضع السيارة']
  plate_number    varchar(20) [unique, not null, note: 'رقم اللوحة']
  car_category_id int         [ref: > car_categories.category_id, note: 'تصنيف فئة السيارة']
  plate_type      plate_type  [note: 'نوع تسجيل اللوحة']
  brand_id        int         [ref: > car_brands.brand_id, note: 'ماركة السيارة']
  model_id        int         [ref: > car_models.model_id, note: 'طراز السيارة']
  serial_number   varchar(50) [unique, note: 'الرقم التسلسلي (رقم الهيكل/الشاصي)']
  payload         int         [default: 5, note: 'الحمولة']
  vehicle_weight  int         [default: 0, note: 'وزن المركبة']
  odometer_reading int        [default: 0, note: 'عداد الكيلومتر']
  
  // Owner and User Info
  owner_name            varchar(100) [note: 'اسم المالك']
  owner_id_number       varchar(50)  [unique, note: 'رقم هوية المالك']
  actual_user_name      varchar(100) [note: 'اسم المستخدم الفعلي']
  actual_user_id_number varchar(50)  [unique, note: 'رقم هوية المستخدم الفعلي']

  // Insurance Info
  insurance_type        insurance_type [note: 'نوع التأمين']
  insurance_company_name  varchar(100) [note: 'اسم شركة التأمين']
  insurance_policy_number varchar(50)  [unique, note: 'رقم بوليصة التأمين']
  insurance_value         decimal(10,2) [default: 0.00, note: 'قيمة التأمين']
  deductible_amount       decimal(10,2) [default: 4500.00, note: 'قسط التحمل']
  
  // Financial, Tamm, and Tracking Info
  purchase_date                 date          [note: 'تاريخ الشراء']
  purchase_price                decimal(10,2) [default: 0.00, note: 'سعر الشراء']
  depreciation_years            int           [default: 4, note: 'عدد سنوات الإهلاك']
  cwa_insurance_rent_increase   decimal(10,2) [default: 0.00, note: 'زيادة سعر الايجار في حال التأمين CWA']
  tamm_user_name                varchar(100)  [note: 'اسم المستخدم في تم']
  tamm_password                 varchar(255)  [note: 'كلمة السر في تم']
  copy_number                   int           [default: 0, note: 'رقم النسخة']
  technical_link_user_name      varchar(100)  [note: 'اسم المستخدم الربط التقني نقل']
  gps_track_imei                varchar(50)   [unique, note: 'GPS Track imei']

  has_tracking_device boolean [default: false, note: 'السيارة تتبع جهاز تتبع']
  oil_expiry_days int         [default: 0, note: 'صلاحية انتهاء الزيت بالأيام']
  // Expiry Dates
  form_license_expiry_date_gregorian      date         [note: 'تاريخ انتهاء الاستمارة/الرخصة (ميلادي)']
  form_license_expiry_date_hijri          varchar(10)  [note: 'تاريخ انتهاء الاستمارة/الرخصة (هجري)']
  insurance_policy_expiry_date_gregorian  date         [note: 'تاريخ انتهاء بوليصة التأمين (ميلادي)']
  insurance_policy_expiry_date_hijri      varchar(10)  [note: 'تاريخ انتهاء بوليصة التأمين (هجري)']
  periodic_inspection_expiry_date_gregorian date       [note: 'تاريخ انتهاء الفحص الدوري (ميلادي)']
  periodic_inspection_expiry_date_hijri     varchar(10)  [note: 'تاريخ انتهاء الفحص الدوري (هجري)']
  operation_card_expiry_date_gregorian    date         [note: 'تاريخ انتهاء كارد التشغيل (ميلادي)']
  operation_card_expiry_date_hijri        varchar(10)  [note: 'تاريخ انتهاء كارد التشغيل (هجري)']
  is_available    car_availability [default: 'available', note: 'حالة توفر السيارة']
  branch_id       int         [ref: > branches.branch_id, note: 'الفرع التابع له']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    plate_number [unique, note: 'رقم اللوحة يجب أن يكون فريد']
  }
}

Table rental_rates {
  rate_id         int         [pk, increment]
  car_id          int         [ref: > cars.car_id, note: 'السيارة']
  // الإيجار اليومي
  daily_rate      decimal(10,2) [default: 0.00, note: 'سعر إيجار اليوم']
  daily_minimum   decimal(10,2) [default: 0.00, note: 'السعر الأدنى']
  daily_allowed_km int        [default: 0, note: 'كم المسموح يومياً']
  // الإيجار بالساعة
  hourly_rate     decimal(10,2) [default: 0.00, note: 'سعر إيجار الساعة']
  hourly_delay_rate decimal(10,2) [default: 0.00, note: 'سعر الساعة تأخير']
  // الكيلومتر المفتوح
  open_km_rate    decimal(10,2) [default: 0.00, note: 'سعر الكيلومتر المفتوح']
  extra_km_rate   decimal(10,2) [default: 0.00, note: 'سعر كم الزائد']
  // الإيجار الشهري
  monthly_rate    decimal(10,2) [default: 0.00, note: 'سعر إيجار الشهر']
  monthly_minimum decimal(10,2) [default: 0.00, note: 'السعر الأدنى للشهر']
  monthly_allowed_km int      [default: 0, note: 'كم المسموح شهرياً']
  // الإيجار بالساعة (إضافي)
  hourly_extra_km_rate decimal(10,2) [default: 0.00, note: 'سعر كم الساعة الزائد']
  hourly_allowed_km int        [default: 0, note: 'كم المسموح بالساعة']
  hourly_rate_per_hour decimal(10,2) [default: 0.00, note: 'سعر إيجار بالساعة']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    car_id [unique, note: 'معدل إيجار واحد لكل سيارة']
  }
}

// Table oil_changes {
//   oil_change_id      int         [pk, increment]
//   car_id            int         [ref: > cars.car_id, note: 'السيارة']
//   current_odometer  int         [not null, note: 'عداد الكيلو متر الحالي']
//   oil_expiry_odometer int      [not null, note: 'ينتهي الزيت عند كم']
//   change_date       date        [not null, note: 'تاريخ تغيير الزيت']
//   amount            decimal(10,2) [default: 0.00, note: 'تكلفة تغيير الزيت']
//   invoice_number    varchar(50)  [unique, note: 'رقم الفاتورة']
//   supplier_name     varchar(100) [note: 'اسم المورد (اختياري)']
//   notes             text         [note: 'ملاحظات']
//   payment_type      payment_type [note: 'نوع الدفع (نقدي، غير نقدي، فاتورة، آجل ...)']
//   car_id            int         [ref: > cars.car_id] // السيارة
//   current_odometer  int         [not null] // عداد الكيلو متر الحالي
//   oil_expiry_odometer int      [not null] // ينتهي الزيت عند كم
//   change_date       date        [not null] // تاريخ تغيير الزيت
//   amount            decimal(10,2) [default: 0.00] // تكلفة تغيير الزيت
//   invoice_number    varchar(50)  // رقم الفاتورة
//   supplier_name     varchar(100) // اسم المورد (اختياري)
//   notes             text         // ملاحظات
//   payment_type      varchar(30)  // نوع الدفع (نقدي، غير نقدي، فاتورة، آجل ...)
//   created_at        datetime     [default: `CURRENT_TIMESTAMP`]
// }

Table movement_types {
  movement_type_id   int         [pk, increment]
  movement_type_name_ar varchar(100) [unique, not null, note: 'اسم نوع الحركة بالعربية (صيانة, تغيير زيت, تحويل)']
  movement_type_name_en varchar(100) [unique, note: 'اسم نوع الحركة بالإنجليزية']
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table car_history {
  history_id         int      [pk, increment]
  car_id             int      [ref: > cars.car_id, not null, note: 'السيارة']
  movement_type_id   int      [ref: > movement_types.movement_type_id, not null, note: 'نوع الحركة']
  branch_id          int      [ref: > branches.branch_id, note: 'الفرع الذي تمت فيه الحركة']
  user_id            int      [ref: > users.user_id, note: 'المستخدم الذي قام بالحركة']
  details            text     [note: 'البيان التفصيلي والملاحظات']
  event_datetime     datetime [not null, note: 'التاريخ والوقت']
  created_at         datetime [default: `CURRENT_TIMESTAMP`]
}

// جداول العملاء ومعلوماتهم

Table identity_types {
  identity_type_id   int         [pk, increment]
  identity_type_name_ar varchar(50) [unique, not null, note: 'نوع الهوية بالعربية']
  identity_type_name_en varchar(50) [unique, note: 'نوع الهوية بالإنجليزية']
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table nationalities {
  nationality_id     int         [pk, increment]
  nationality_name_ar varchar(50) [unique, not null, note: 'الجنسية بالعربية']
  nationality_name_en varchar(50) [unique, note: 'الجنسية بالإنجليزية']
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table professions {
  profession_id      int         [pk, increment]
  profession_name_ar varchar(100) [unique, not null, note: 'المهنة بالعربية']
  profession_name_en varchar(100) [unique, note: 'المهنة بالإنجليزية']
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table client_categories {
  category_id        int         [pk, increment]
  category_name_ar   varchar(50) [unique, not null, note: 'تصنيف العميل بالعربية (VIP، عادي، ذهبي...)']
  category_name_en   varchar(50) [unique, note: 'تصنيف العميل بالإنجليزية']
  discount_percentage decimal(5,2) [default: 0.00, note: 'نسبة خصم خاصة بالفئة']
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table clients {
  client_id          int         [pk, increment]
  client_code        varchar(20) [unique, note: 'كود العميل']
  client_name        varchar(100) [unique, not null, note: 'اسم العميل']
  identity_type      identity_type [note: 'نوع الهوية']
  identity_number    varchar(50) [unique, not null, note: 'رقم الهوية']
  nationality_id     int         [ref: > nationalities.nationality_id, note: 'الجنسية']
  mobile_number      varchar(20) [unique, note: 'رقم الجوال']
  work_phone         varchar(20) [note: 'هاتف عمل']
  gender             gender      [note: 'الجنس']
  profession_id      int         [ref: > professions.profession_id, note: 'المهنة']
  client_category_id int         [ref: > client_categories.category_id, note: 'تصنيف العميل']
  passport_number    varchar(50) [unique, note: 'رقم الجواز للطيران']
  correspondence_address text    [note: 'عنوان المراسل']
  address            text        [note: 'العنوان']
  add_tax_percentage boolean     [default: false, note: 'إضافة الميل للضريبة']
  has_guarantor      boolean     [default: false, note: 'يوجد كفيل غارم / ضامن']
  
  // التواريخ الميلادية
  identity_expiry_gregorian date [note: 'انتهاء الهوية تاريخ ميلادي']
  birth_date_gregorian     date  [note: 'تاريخ الميلاد الميلادي']
  license_expiry_gregorian date  [note: 'انتهاء الرخصة تاريخ ميلادي']
  
  // التواريخ الهجرية
  identity_expiry_hijri    varchar(20) [note: 'انتهاء الهوية هجري']
  birth_date_hijri         varchar(20) [note: 'تاريخ الميلاد الهجري']
  license_expiry_hijri     varchar(20) [note: 'انتهاء الرخصة هجري']
  
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at         datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    identity_number [unique, note: 'رقم الهوية يجب أن يكون فريد']
  }
}

Table guarantors {
  guarantor_id      int          [pk, increment]
  client_id         int          [ref: > clients.client_id, unique, not null, note: 'العميل المكفول']
  guarantor_name    varchar(100) [unique, not null, note: 'اسم الكفيل / الشركة']
  id_tax_number     varchar(50)  [unique, note: 'رقم الهوية / الرقم الضريبي']
  address           text         [note: 'العنوان']
  profession_id     int          [ref: > professions.profession_id, note: 'المهنة']
  nationality_id    int          [ref: > nationalities.nationality_id, note: 'الجنسية']
  employer          varchar(100) [note: 'جهة العمل']
  work_phone        varchar(20)  [note: 'هاتف عمل']
  mobile_phone      varchar(20)  [unique, note: 'هاتف جوال']
  created_at        datetime     [default: `CURRENT_TIMESTAMP`]
  updated_at        datetime     [default: `CURRENT_TIMESTAMP`]
}

//////////////////////################################################/////////////////////////////

//######___________________________#####

// جدول المدن ووتحديد المنطقة
Table cities {
  city_id         int         [pk, increment]
  city_name_ar    varchar(50)   [unique, not null, note: 'الاسم عربي']
  city_name_en    varchar(50)   [unique, not null, note: 'الاسم عربي']
  code            int         [pk, increment]
  branch_id       int     [ref: > branches.branch_id,  note: 'الفرع'  ]
  
  
  indexes {
    (city_id)
  }
}


// employees
Table employees {
  employee_id             int         [pk, increment]
  employee_code           varchar(20) [unique, not null, note: 'كود الموظف']
  employee_name           varchar(100) [unique, not null, note: 'اسم الموظف']
  job_title               varchar(100) [note: 'الوظيفة']
  branch_id               int         [ref: > branches.branch_id, not null, note: 'الفرع']
  created_at              datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at              datetime    [default: `CURRENT_TIMESTAMP`]
  indexes {
    (employee_id)
  }
}


Table contracts {
  contract_id             int         [pk, increment]
  contract_number         varchar(50) [unique, not null, note: 'رقم العقد']

  client_id               int         [ref: > clients.client_id, not null, note: 'العميل']
  car_id              int         [ref: > cars.car_id, not null, note: 'السيارة']
  branch_id               int         [ref: > branches.branch_id, not null, note: 'الفرع']

  contract_type           contract_type [note: 'نوع العقد']
  rental_type             rental_type [note: 'نوع الإيجار']
  rental_days             int         [note: 'عدد أيام الإيجار']
  kilometers_allowed      int         [note: 'الكيلومترات المسموحة']
  daily_km_limit          int         [note: 'الحد اليومي للكيلومترات']
  extra_km_price          decimal(10,2) [note: 'سعر الكيلومتر الإضافي']

  start_datetime          datetime [not null, note: 'تاريخ ووقت البداية']
  end_datetime            datetime [not null, note: 'تاريخ ووقت النهاية']
  start_datetime_hijri    varchar(20) [note: 'تاريخ البداية هجري']
  end_datetime_hijri      varchar(20) [note: 'تاريخ النهاية هجري']

  insurance_type          insurance_type [note: 'نوع التأمين']
  daily_rate              decimal(10,2) [note: 'السعر اليومي']
  discount                decimal(10,2) [note: 'الخصم']
  amount_due              decimal(10,2) [not null, note: 'المبلغ المستحق']
  amount_paid             decimal(10,2) [not null, note: 'المبلغ المدفوع']
  payment_method_id       int [ref: > payment_methods.method_id, note: 'طريقة الدفع']

  status                  contract_status [default: 'active', note: 'حالة العقد']
  is_booking              boolean [default: false, note: 'حجز']
  notes                   text [note: 'ملاحظات']
  created_by              int [ref: > users.user_id, note: 'تم الإنشاء بواسطة']
  created_at              datetime [default: `CURRENT_TIMESTAMP`]
  updated_at              datetime [default: `CURRENT_TIMESTAMP`]

  indexes {
    (contract_number)
    (client_id)
    (car_id)
    (branch_id)
    (status)
    (start_datetime)
    (end_datetime)
  }
}


Table financial_transactions {
  transaction_id         int         [pk, increment]
  location_id           int         [ref: > locations.location_id, not null, note: 'الموقع']
  branch_id              int         [ref: > branches.branch_id, not null, note: 'الفرع']
 
  voucher_number         varchar(50) [unique, not null, note: 'رقم القسيمة']
  transaction_type       transaction_type [not null, note: 'نوع المعاملة']
  amount                 decimal(10,2) [not null, note: 'المبلغ']
  transaction_datetime   datetime    [not null, note: 'تاريخ ووقت المعاملة']
  status                 transaction_status [default: 'completed', note: 'الحالة']
  created_by             int         [ref: > users.user_id, not null, note: 'تم الإنشاء بواسطة']
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at             datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (voucher_number)
    (transaction_datetime)
    (branch_id)
    (status)
  }
}

// الصندوق
Table cashbox {
  cashbox_id                     int           [pk, increment]
  transaction_date       datetime     [ref: > financial_transactions.transaction_datetime, not null, note: 'تاريخ العملية']
  description text
  amount decimal
  transaction_type       varchar [ref: > financial_transactions.transaction_type ]
  user_id                int [ref: > employees.employee_id, note: 'الموظف']
  payment_method         varchar
  reference_number       varchar
  created_at             datetime
}


// جدول عمليات الصندوق (الرصيد الافتتاحي، تسليم وردية، توريد، إلخ)
Table cashbox_operations {
  operation_id           int         [pk, increment]
  branch_id              int         [ref: > branches.branch_id, not null, note: 'الفرع']
  operation_type         cashbox_operation_type [not null, note: 'نوع العملية']
  amount                 decimal(10,2) [not null, note: 'المبلغ']
  operation_date         datetime    [not null, note: 'تاريخ العملية']
  
  // لعمليات تسليم الوردية
  from_user_id           int         [ref: > users.user_id, note: 'من المستخدم']
  to_user_id             int         [ref: > users.user_id, note: 'إلى المستخدم']
  network_receipts_amount decimal(10,2) [note: 'مبلغ إيصالات الشبكة']
  
  // للتوريد للبنك
  bank_account_id        int         [ref: > accounts.account_id, note: 'الحساب البنكي']
  deposit_reference      varchar(50) [note: 'رقم الإيداع/التحويل']
  
  // حقول مشتركة
  notes                  text        [note: 'ملاحظات']
  created_by             int         [ref: > users.user_id, not null, note: 'تم الإنشاء بواسطة']
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (branch_id, operation_date)
    (operation_type)
    (from_user_id, to_user_id)
  }
}

// جدول تسوية صندوق الفرع
Table branch_cashbox_adjustments {
  adjustment_id          int         [pk, increment]
  branch_id              int         [ref: > branches.branch_id, not null, note: 'الفرع']
  current_balance        decimal(10,2) [not null, note: 'الرصيد الحالي']
  adjustment_amount      decimal(10,2) [not null, note: 'مبلغ التسوية']
  new_balance            decimal(10,2) [not null, note: 'الرصيد الجديد']
  adjustment_reason      text        [not null, note: 'سبب التسوية']
  adjustment_date        datetime    [not null, note: 'تاريخ التسوية']
  approved_by            int         [ref: > users.user_id, note: 'تمت الموافقة بواسطة']
  created_by             int         [ref: > users.user_id, not null, note: 'تم الإنشاء بواسطة']
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (branch_id, adjustment_date)
  }
}



// ===== تعريف Enums للعمليات المالية =====
enum cashbox_operation_type {
  opening_balance // الرصيد الافتتاحي
  shift_handover // تسليم وردية
  collector_supply // توريد لمحصل
  branch_supply // توريد لفرع
  bank_deposit // توريد لبنك
  refund_operation // عملية استرداد
  branch_adjustment // تسوية صندوق فرع
}

enum voucher_related_to {
  general // عام
  car // سيارة
  branch // فرع
  client // عميل
  employee // موظف
}

enum payment_instrument {
  cash // نقدا
  check // شيك
  bank_transfer // تحويل بنكي
  card // بطاقة
}

// ===== جداول العمليات المالية =====



//البنوك 
Table banks {
  bank_id                int         [pk, increment]
  bank_name_ar           varchar(100) [unique, not null, note: 'اسم البنك بالعربية']
  bank_name_en           varchar(100) [unique, note: 'اسم البنك بالإنجليزية']
  is_active              boolean     [default: true, note: 'نشط']
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at             datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (bank_name_ar)
    (bank_name_en)
    (is_active)
  }
}

// جدول سندات المصروفات والإيرادات
Table financial_vouchers {
  voucher_id             int         [pk, increment]
  voucher_number         varchar(50) [unique, not null, note: 'رقم السند']
  branch_id              int         [ref: > branches.branch_id, not null, note: 'الفرع']
  transaction_datetime   datetime    [not null, note: 'تاريخ ووقت المعاملة']
  transaction_type       transaction_type [not null, note: 'نوع المعاملة (قبض/صرف)']
  
  // الجهة المرتبطة
  related_to             voucher_related_to [not null, note: 'متعلق بـ']
  car_id                 int         [ref: > cars.car_id, note: 'السيارة المرتبطة']
  client_id              int         [ref: > clients.client_id, note: 'العميل المرتبط']
  employee_id            int         [ref: > users.user_id, note: 'الموظف المرتبط']
  
  // تفاصيل مالية
  amount                 decimal(10,2) [not null, note: 'المبلغ']
  description            text        [note: 'البيان']
  invoice_number         varchar(50) [note: 'رقم الفاتورة']
  cashbox_id int [ref: > cashbox.cashbox_id, note: 'الصندوق المرتبط بالسند']


  // معلومات الضريبة
  tax_amount             decimal(10,2) [default: 0.00, note: 'مبلغ الضريبة']
  supplier_id            int         [ref: > suppliers.supplier_id, note: 'المورد']
  tax_number             varchar(50) [note: 'الرقم الضريبي']
  
  // طريقة الدفع
  payment_method_id      int         [ref: > payment_methods.method_id, not null, note: 'طريقة الدفع']
  check_number           varchar(50) [note: 'رقم الشيك']
  bank_id                int         [ref: > banks.bank_id, note: 'البنك']
  transaction_reference  varchar(50) [note: 'رقم العملية']
  
  // معلومات الحساب
  from_account_id        int         [ref: > accounts.account_id, not null, note: 'من حساب']
  
  // حقول التدقيق
  created_by             int         [ref: > users.user_id, not null, note: 'تم الإنشاء بواسطة']
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  updated_by             int         [ref: > users.user_id, note: 'تم التعديل بواسطة']
  updated_at             datetime    [default: `CURRENT_TIMESTAMP`]
  device_info            varchar(255) [note: 'معلومات الجهاز']
  
  indexes {
    (voucher_number)
    (branch_id, transaction_datetime)
    (transaction_type)
    (related_to)
    (client_id)
    (car_id)
    (employee_id)
  }
}


// انواع السندات
Table voucher_types {
  type_id           int          [pk, increment]
  type_name         varchar(100) [not null, unique, note: 'اسم نوع السند']
  transaction_type  transaction_type [not null, note: 'نوع العملية (قبض أو صرف)']
  description       text         [note: 'وصف إضافي']
  is_active         boolean      [default: true]
  created_at        datetime     [default: `CURRENT_TIMESTAMP`]
  updated_at        datetime     [default: `CURRENT_TIMESTAMP`]

  indexes {
    (transaction_type)
    (is_active)
  }
}



enum transaction_type {
  receipt // قبض
  payment // صرف
}


// جدول الموردين
Table suppliers {
  supplier_id            int         [pk, increment]
  supplier_code          varchar(20) [unique, note: 'كود المورد']
  supplier_name_ar       varchar(100) [unique, not null, note: 'اسم المورد بالعربية']
  supplier_name_en       varchar(100) [unique, note: 'اسم المورد بالإنجليزية']
  tax_number             varchar(50) [unique, note: 'الرقم الضريبي']
  contact_person         varchar(100) [note: 'الشخص المسؤول']
  phone_number           varchar(20) [note: 'رقم الهاتف']
  email                  varchar(100) [note: 'البريد الإلكتروني']
  address                text        [note: 'العنوان']
  is_active              boolean     [default: true, note: 'نشط']
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at             datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (supplier_code)
    (tax_number)
    (is_active)
  }
}


//   branch_sequence        int         [not null, note: 'تسلسل الفرع']    // حائرين ماهي ؟؟؟؟؟
// جدول دفتر اليومية
Table journal_entries {
  entry_id               int         [pk, increment]
  voucher_number         varchar(50) [unique, not null, note: 'رقم السند']
  branch_id              int         [ref: > branches.branch_id, not null, note: 'الفرع']
  entry_datetime         datetime    [not null, note: 'تاريخ ووقت القيد']
  
  // تفاصيل المعاملة
  transaction_type       transaction_type [not null, note: 'نوع الحركة']   /// ربط بالنوع المناسب | ==enum
  operation_category     varchar(50) [ref: > transaction_categories.category_id ,note: 'نوع العملية'] // الربط مع انواع سندات الصرف وانواع سندات القبض 
  voucher_types         int         [ref: > voucher_types.type_id, note: 'نوع السند']
  contract_id            int         [ref: > contracts.contract_id, note: 'العقد المرتبط']
  
  // المبالغ
  receipt_amount         decimal(10,2) [default: 0.00, note: 'مبلغ القبض']
  payment_amount         decimal(10,2) [default: 0.00, note: 'مبلغ الصرف']
  
  // تفاصيل إضافية
  description            text        [note: 'البيان']
  payment_method_id      int         [ref: > payment_methods.method_id, note: 'طريقة الدفع']
  from_account_id        int         [ref: > accounts.account_id, note: 'من حساب']
  
  // معلومات الاعتماد
  approved_by            int         [ref: > users.user_id, note: 'معتمد بواسطة']
  approval_number        varchar(50) [note: 'رقم الموافقة']
  
  // معلومات المورد
  supplier_id            int         [ref: > suppliers.supplier_id, note: 'المورد']
  tax_number             varchar(50) [note: 'الرقم الضريبي']
  
  // حقول التدقيق
  created_by             int         [ref: > users.user_id, not null, note: 'تم الإنشاء بواسطة']
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  updated_by             int         [ref: > users.user_id, note: 'تم التعديل بواسطة']
  updated_at             datetime    [default: `CURRENT_TIMESTAMP`]
  device_info            varchar(255) [note: 'معلومات الجهاز']
  
  indexes {
    (voucher_number)
    (branch_id) [unique] //branch_sequence if we need it
    (entry_datetime)
    (transaction_type)
    (contract_id)
    (supplier_id)
  }
}






// تصحيح الإشارة في جدول expense_transactions
Table expense_transactions {
  expense_transaction_id int       [pk, increment]
  transaction_id         int       [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  voucher_types         int         [ref: > voucher_types.type_id, note: 'نوع السند']
  supplier_name          varchar(100) [note: 'اسم المورد']
  invoice_number         varchar(50) [unique, note: 'رقم الفاتورة']
  
  indexes {
    (transaction_id) [unique]
    
  }
}

// جدول تفاصيل الضرائب للمعاملات
Table transaction_taxes {
  tax_detail_id         int        [pk, increment]
  transaction_id        int        [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  tax_id                int        [ref: > tax_settings.tax_id, note: 'الضريبة']
  tax_amount            decimal(10,2) [not null, note: 'مبلغ الضريبة']
  tax_percentage        decimal(5,2)  [not null, note: 'نسبة الضريبة']
  
  indexes {
    (transaction_id)
  }
}



Table transaction_categories {
  category_id                int         [pk, increment]
  category_name              varchar(50) [unique, not null, note: 'اسم الفئة']
  parent_id                  int         [ref: > transaction_categories.category_id, note: 'الفئة الأب']
  affects_account_type       affects_account_type [note: 'نوع الحساب المتأثر']
  is_active                  boolean     [default: true]
  
  indexes {
    (parent_id)
    (is_active)
  }
}




Table contract_transactions {
  contract_transaction_id int       [pk, increment]
  transaction_id         int        [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  contract_id            int        [ref: > contracts.contract_id, note: 'العقد']
  operation_type         operation_type [note: 'نوع العملية']
  paper_contract_number  varchar(50) [unique, note: 'رقم العقد الورقي']
  
  indexes {
    (transaction_id) [unique]
    (contract_id)
    (operation_type)
  }
}

// جدول أرشفة العقود المنتهية
Table archived_contracts {
  archive_id              int         [pk, increment]
  original_contract_id    int         [not null, note: 'المعرف الأصلي للعقد']
  contract_number         varchar(50) [not null, note: 'رقم العقد']
  client_id               int         [not null, note: 'العميل']
  car_id                  int         [not null, note: 'السيارة']
  branch_id               int         [not null, note: 'الفرع']
  contract_data           json        [not null, note: 'بيانات العقد كاملة بتنسيق JSON']
  start_datetime          datetime    [not null, note: 'تاريخ البداية']
  end_datetime            datetime    [not null, note: 'تاريخ النهاية']
  archive_date            datetime    [default: `CURRENT_TIMESTAMP`, note: 'تاريخ الأرشفة']
  archived_by             int         [ref: > users.user_id, note: 'تم الأرشفة بواسطة']
  
  indexes {
    (original_contract_id) [unique, note: 'منع تكرار نفس العقد']
    (contract_number)
    (client_id)
    (archive_date)
  }
}

// جدول أرشفة المعاملات المالية القديمة
Table archived_transactions {
  archive_id                int         [pk, increment]
  original_transaction_id   int         [not null, note: 'المعرف الأصلي للمعاملة']
  transaction_data          json        [not null, note: 'بيانات المعاملة كاملة بتنسيق JSON']
  archive_date              datetime    [default: `CURRENT_TIMESTAMP`, note: 'تاريخ الأرشفة']
  archived_by               int         [ref: > users.user_id, note: 'تم الأرشفة بواسطة']
  
  indexes {
    (original_transaction_id) [unique, note: 'منع تكرار نفس المعاملة']
    (archive_date)
  }
}

// إضافة سياسة الأرشفة في جدول الإعدادات
Table system_settings {
  setting_id       int         [pk, increment]
  setting_key      varchar(50) [unique, not null, note: 'مفتاح الإعداد']
  setting_value    text        [not null, note: 'قيمة الإعداد']
  setting_group    varchar(50) [not null, note: 'مجموعة الإعداد']
  
  // إعدادات الأرشفة
  // archive_contracts_after_days: "365"
  // archive_transactions_after_days: "730"
  // archive_inactive_clients_after_days: "1095"
}


enum affects_account_type {
  cash
  client
  expense
  revenue
}




Table accounts {
  account_id         int         [pk, increment]
  account_code       varchar(20) [unique, not null, note: 'كود الحساب']
  account_name       varchar(100) [unique, not null, note: 'اسم الحساب']
  account_type       account_type [not null, note: 'نوع الحساب']
  category_id        int         [ref: > account_categories.category_id, note: 'فئة الحساب']
  sub_type           account_sub_type [not null, note: 'النوع الفرعي']
  related_client_id  int         [ref: > clients.client_id, note: 'العميل المرتبط']
  related_user_id    int         [ref: > users.user_id, note: 'المستخدم المرتبط']
  opening_balance    decimal(12,2) [default: 0.00, note: 'الرصيد الافتتاحي']
  current_balance    decimal(12,2) [default: 0.00, note: 'الرصيد الحالي']
  is_active          boolean     [default: true]
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at         datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (account_type)
    (sub_type)
    (is_active)
    (related_client_id)
    (related_user_id)
  }
}

Table account_categories {
  category_id     int         [pk, increment]
  category_name   varchar(50) [unique, not null, note: 'اسم فئة الحساب']
  parent_id       int         [ref: > account_categories.category_id, note: 'الفئة الأب']
  is_active       boolean     [default: true]
  
  indexes {
    (parent_id)
    (is_active)
  }
}

Table tax_settings {
  tax_id          int         [pk, increment]
  tax_name        varchar(50) [unique, not null, note: 'اسم الضريبة']
  tax_percentage  decimal(5,2) [not null, note: 'نسبة الضريبة']
  is_active       boolean     [default: true]
  applies_to      tax_applies_to [default: 'all', note: 'يطبق على']
  start_date      date        [not null, note: 'تاريخ البداية']
  end_date        date        [note: 'تاريخ النهاية']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (is_active)
    (applies_to)
    (start_date, end_date)
  }
}

Table account_movements {
  movement_id        int         [pk, increment]
  account_id         int         [ref: > accounts.account_id, note: 'الحساب']
  transaction_id     int         [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  movement_type      movement_type [not null, note: 'نوع الحركة']
  amount             decimal(10,2) [not null, note: 'المبلغ']
  previous_balance   decimal(12,2) [not null, note: 'الرصيد السابق']
  new_balance        decimal(12,2) [not null, note: 'الرصيد الجديد']
  movement_date      datetime    [default: `CURRENT_TIMESTAMP`, note: 'تاريخ الحركة']
  
  indexes {
    (account_id)
    (transaction_id)
    (movement_date)
    (movement_type)
  }
}

Table transaction_category_mapping {
  mapping_id         int         [pk, increment]
  transaction_id     int         [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  category_id        int         [ref: > transaction_categories.category_id, note: 'فئة المعاملة']
  
  indexes {
    (transaction_id)
    (category_id)
  }
}



Table payment_methods {
  method_id        int           [pk, increment]
  name          varchar(50)   [unique, not null, note: 'الاسم العربي']
  is_active        boolean       [default: true]
}



Table shift_handovers {
  handover_id       int [pk, increment]
  from_user_id      int [ref: > users.user_id, note: 'من المستخدم']
  to_user_id        int [ref: > users.user_id, note: 'إلى المستخدم']
  cash_amount       decimal(10,2) [note: 'مبلغ النقد']
  network_receipts  decimal(10,2) [note: 'إيصالات الشبكة']
  handover_time     datetime [default: `CURRENT_TIMESTAMP`, note: 'وقت التسليم']
  created_by        int [ref: > users.user_id, note: 'تم الإنشاء بواسطة']
}

Table supply_handovers {
  handover_id       int [pk, increment]
  from_user_id      int [ref: > users.user_id, note: 'من المستخدم']
  to_user_id        int [ref: > users.user_id, note: 'إلى المستخدم']
  cash_amount       decimal(10,2) [note: 'مبلغ النقد']
  network_receipts  decimal(10,2) [note: 'إيصالات الشبكة']
  handover_time     datetime [default: `CURRENT_TIMESTAMP`, note: 'وقت التسليم']
  created_by        int [ref: > users.user_id, note: 'تم الإنشاء بواسطة']
}

Table administrative_expenses {
  expense_id        int [pk, increment]
  transaction_id    int [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  category          varchar(100) [note: 'الفئة']
  description       text [note: 'الوصف']
  created_at        datetime [default: `CURRENT_TIMESTAMP`]
}



Table contract_payments_schedule {
  schedule_id     int         [pk, increment]
  contract_id     int         [ref: > contracts.contract_id, not null, note: 'العقد']
  payment_date    date        [not null, note: 'تاريخ الدفع']
  amount_due      decimal(10,2) [not null, note: 'المبلغ المستحق']
  status          payment_schedule_status [default: 'pending', note: 'الحالة']
  transaction_id  int         [ref: > financial_transactions.transaction_id, note: 'المعاملة المالية']
  reminder_sent   boolean     [default: false, note: 'تم إرسال التذكير']
  notes           text [note: 'ملاحظات']
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (contract_id, payment_date)
    (status, payment_date)
  }
}






// Financial Operations TableGroup
TableGroup financial_operations {
  cashbox_operations
  financial_vouchers
  branch_cashbox_adjustments
  suppliers
  journal_entries
  shift_handovers
  administrative_expenses
}



TableGroup user_management {
  permission_groups
  permissions
  permission_group_permissions
  users
  employees
}

TableGroup car_fleet {
  car_brands
  car_models
  car_colors
  car_categories
  cars
  rental_rates
  movement_types
  car_history
}

TableGroup client_management {
  identity_types
  nationalities
  professions
  client_categories
  clients
  guarantors
}

TableGroup branch_and_locations {
  locations
  months
  branch_targets
  branches
  cities
}

TableGroup contracts {
  contracts
  contract_transactions
  contract_payments_schedule
  archived_contracts
}




TableGroup settings_and_system {
  system_settings
  tax_settings
}