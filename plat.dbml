Project platDB {
  database_type : "MySQL"
}

Table locations {
  location_id     int  [pk, increment]
  location_name   varchar(100) [not null]
  address         varchar(255)
  city            varchar(50)
  region          varchar(50)
  latitude        decimal(10,8)
  longitude       decimal(11,8)
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table months {
  month_id        int         [pk, increment]
  month_number    int         [unique, not null] // رقم الشهر (1-12)
  month_name_ar   varchar(20) [not null] // اسم الشهر بالعربية
  month_name_en   varchar(20) [not null] // اسم الشهر بالإنجليزية
}

Table branch_targets {
  target_id                         int         [pk, increment]
  branch_id                         int         [ref: > branches.branch_id] // الفرع
  month_id                          int         [ref: > months.month_id] // الشهر
  target_amount                     decimal(10,2) [default: 0.00] // مبلغ التارجت
  // Target settings (إعدادات التارجت)
  commission_calculation_percentage  int         [default: 100] // حتى يتم احتساب عمولة الموظف يجب أكمال التارجت المطلوب بنسبة %
  target_achievement_percentage      decimal(5,2) [default: 1.0] // من تم تحقيق التارجت المطلوب %
  calculate_commission_full_amount   boolean     [default: false] // احتساب العمولة على كامل المبلغ
  minimum_rent_additional            int         [default: 85] // سعر الإيجار الأدنى + X ويجب بحسب بنع %
  minimum_rent_base                  int         [default: 30] // القيمة الأساسية للإيجار الأدنى
  created_at                        datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at                        datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (branch_id, month_id) [unique] // منع تكرار نفس الشهر لنفس الفرع
  }
}

Table services {
  service_id      int         [pk, increment]
  service_name_ar varchar(100) [not null] // اسم الخدمة بالعربية
  service_name_en varchar(100) // اسم الخدمة بالإنجليزية
  description     text        // وصف الخدمة
  is_active       boolean     [default: true] // فعال/غير فعال
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table branch_services {
  branch_service_id int [pk, increment]
  branch_id         int [ref: > branches.branch_id] // الفرع
  service_id        int [ref: > services.service_id] // الخدمة
  is_active         boolean [default: true] // الخدمة فعالة في هذا الفرع
  start_date        date // تاريخ بداية الخدمة
  end_date          date // تاريخ انتهاء الخدمة (اختياري)
  notes             text // ملاحظات خاصة بالخدمة في هذا الفرع
  created_at        datetime [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (branch_id, service_id) [unique] // منع تكرار نفس الخدمة لنفس الفرع
  }
}

Table branches {
  branch_id                         int         [pk, increment]
  branch_code                       varchar(10) [unique, not null] // كود الفرع
  branch_name_ar                    varchar(100) [not null] // الاسم العربي
  branch_name_en                    varchar(100) // الاسم الإنجليزي
  location_id                       int         [ref: > locations.location_id] // الموقع من جدول منفصل    
  // Contact Information
  phone_number                      varchar(20) // هاتف الفرع
  license_number                    varchar(50) // رقم ترخيص الفرع
  branch_license_number             varchar(50) // رقم ترخيص الفرع
 //responsible manager information
  responsible_manager_name          varchar(100) // المدير المسؤول
  responsible_manager_mobile        varchar(20) // جوال المدير المسؤول
  //branch information
  branch_email                      varchar(100) // البريد الإلكتروني (تبع الفرع)
  branch_address                    varchar(100)
  

  // Additional branch settings from new image
  max_count                         int         [default: 1000] // العدد الأقصى (1000 في الصورة)
  security_camera_link              varchar(255) // رابط كاميرا المراقبة
  fingerprint_system_link           varchar(255) // رابط نظام البصمة
  rental_sequence_start             int         [default: 1] // بداية تسلسل المؤجر
  documents_sequence_start          int         [default: 1] // بداية تسلسل السندات
  // Branch limitations and features
  no_document_updates               boolean     [default: false] // لا يوجد طقورات للسندات لعدم امكانية المقر بتحديث الاسعار
  no_check_visa_payment             boolean     [default: false] // هذا الفرع لا يدعم القبض بالشيكة او فيزا
  // Operating hours
  opening_time                      time        // بداية عمل البرنامج يوميا عند الساعة
  closing_time                      time        // إغلاق البرنامج يوميا عند الساعة
  created_at                        datetime [default: `CURRENT_TIMESTAMP`]
  updated_at                        datetime [default: `CURRENT_TIMESTAMP`]
}

// جداول إدارة المستخدمين والصلاحيات

Table permission_groups {
  group_id        int         [pk, increment]
  group_name      varchar(100) [not null] // اسم مجموعة الصلاحيات
  description     text        // وصف المجموعة
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table permissions {
  permission_id   int         [pk, increment]
  permission_key  varchar(50) [unique, not null] // مفتاح الصلاحية
  description     varchar(255) [not null] // وصف الصلاحية
  category        varchar(50) // تصنيف الصلاحية
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

Table permission_group_permissions {
  id              int         [pk, increment]
  group_id        int         [ref: > permission_groups.group_id]
  permission_id   int         [ref: > permissions.permission_id]
  
  indexes {
    (group_id, permission_id) [unique] // لمنع تكرار الصلاحية في نفس المجموعة
  }
}

Table users {
  user_id         int         [pk, increment]
  job_number      varchar(20) // الرقم الوظيفي
  name_ar         varchar(100) [not null] // الاسم العربي
  name_en         varchar(100) // الاسم الإنجليزي
  password        varchar(255) [not null] // كلمة المرور (مشفرة)
  branch_id       int         [ref: > branches.branch_id] // الفرع التابع له
  permission_group_id int     [ref: > permission_groups.group_id] // مجموعة الصلاحيات
  is_active       boolean     [default: true] // تفعيل دخول المستخدم
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
}

// جداول نظام أسطول السيارات

Table car_brands {
  brand_id       int         [pk, increment]
  brand_name_ar  varchar(50) [not null] // اسم الماركة بالعربية
  brand_name_en  varchar(50) // اسم الماركة بالإنجليزية
  is_active      boolean     [default: true]
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
}

Table car_models {
  model_id       int         [pk, increment]
  brand_id       int         [ref: > car_brands.brand_id] // الماركة التابع لها
  model_name_ar  varchar(50) [not null] // اسم الطراز بالعربية
  model_name_en  varchar(50) // اسم الطراز بالإنجليزية
  is_active      boolean     [default: true]
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (brand_id, model_name_ar) [unique] // منع تكرار نفس الطراز لنفس الماركة
  }
}

Table car_colors {
  color_id       int         [pk, increment]
  color_name_ar  varchar(30) [not null, unique] // اسم اللون بالعربية
  color_name_en  varchar(30) // اسم اللون بالإنجليزية
  color_code     varchar(20) // كود اللون
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
}

Table car_categories {
  category_id    int         [pk, increment]
  category_name_ar varchar(50) [not null, unique] // اسم الفئة بالعربية
  category_name_en varchar(50) // اسم الفئة بالإنجليزية
  created_at     datetime    [default: `CURRENT_TIMESTAMP`]
}

Table plate_types {
  plate_type_id    int         [pk, increment]
  plate_type_name_ar varchar(50) [not null, unique] // اسم نوع اللوحة بالعربية
  plate_type_name_en varchar(50) // اسم نوع اللوحة بالإنجليزية
  created_at       datetime    [default: `CURRENT_TIMESTAMP`]
}

Table model_years {
  model_year_id int [pk, increment]
  year int [not null, unique] // سنة الموديل
}

Table cars {
  car_id          int         [pk, increment]
  plate_number    varchar(20) [not null] // رقم اللوحة
  model_year_id   int         [ref: > model_years.model_year_id, not null] // سنة الموديل من جدول منفصل
  car_category_id int         [ref: > car_categories.category_id] // تصنيف فئة السيارة
  plate_type_id   int         [ref: > plate_types.plate_type_id] // نوع تسجيل اللوحة
  brand_id        int         [ref: > car_brands.brand_id] // ماركة السيارة
  model_id        int         [ref: > car_models.model_id] // طراز السيارة
  color_id        int         [ref: > car_colors.color_id] // لون السيارة
  serial_number   varchar(50) // الرقم التسلسلي
  odometer_reading int        [default: 0] // عداد الكيلومتر
  has_tracking_device boolean [default: false] // السيارة تتبع جهاز تتبع
  oil_expiry_days int         [default: 0] // صلاحية انتهاء الزيت بالأيام
  is_available    boolean     [default: true] // السيارة متاحة
  branch_id       int         [ref: > branches.branch_id] // الفرع التابع له
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    plate_number [unique] // رقم اللوحة يجب أن يكون فريد
  }
}

Table rental_rates {
  rate_id         int         [pk, increment]
  car_id          int         [ref: > cars.car_id] // السيارة
  // الإيجار اليومي
  daily_rate      decimal(10,2) [default: 0.00] // سعر إيجار اليوم
  daily_minimum   decimal(10,2) [default: 0.00] // السعر الأدنى
  daily_allowed_km int        [default: 0] // كم المسموح يومياً
  // الإيجار بالساعة
  hourly_rate     decimal(10,2) [default: 0.00] // سعر إيجار الساعة
  hourly_delay_rate decimal(10,2) [default: 0.00] // سعر الساعة تأخير
  // الكيلومتر المفتوح
  open_km_rate    decimal(10,2) [default: 0.00] // سعر الكيلومتر المفتوح
  extra_km_rate   decimal(10,2) [default: 0.00] // سعر كم الزائد
  // الإيجار الشهري
  monthly_rate    decimal(10,2) [default: 0.00] // سعر إيجار الشهر
  monthly_minimum decimal(10,2) [default: 0.00] // السعر الأدنى للشهر
  monthly_allowed_km int      [default: 0] // كم المسموح شهرياً
  // الإيجار بالساعة (إضافي)
  hourly_extra_km_rate decimal(10,2) [default: 0.00] // سعر كم الساعة الزائد
  hourly_allowed_km int        [default: 0] // كم المسموح بالساعة
  hourly_rate_per_hour decimal(10,2) [default: 0.00] // سعر إيجار بالساعة
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    car_id [unique] // معدل إيجار واحد لكل سيارة
  }
}

Table oil_changes {
  oil_change_id      int         [pk, increment]
  car_id            int         [ref: > cars.car_id] // السيارة
  current_odometer  int         [not null] // عداد الكيلو متر الحالي
  oil_expiry_odometer int      [not null] // ينتهي الزيت عند كم
  change_date       date        [not null] // تاريخ تغيير الزيت
  amount            decimal(10,2) [default: 0.00] // تكلفة تغيير الزيت
  invoice_number    varchar(50)  // رقم الفاتورة
  supplier_name     varchar(100) // اسم المورد (اختياري)
  notes             text         // ملاحظات
  payment_type      varchar(30)  // نوع الدفع (نقدي، غير نقدي، فاتورة، آجل ...)
  created_at        datetime     [default: `CURRENT_TIMESTAMP`]
}

// جداول العملاء ومعلوماتهم

Table identity_types {
  identity_type_id   int         [pk, increment]
  identity_type_name_ar varchar(50) [not null, unique] // نوع الهوية بالعربية
  identity_type_name_en varchar(50) // نوع الهوية بالإنجليزية
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table nationalities {
  nationality_id     int         [pk, increment]
  nationality_name_ar varchar(50) [not null, unique] // الجنسية بالعربية
  nationality_name_en varchar(50) // الجنسية بالإنجليزية
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table professions {
  profession_id      int         [pk, increment]
  profession_name_ar varchar(100) [not null, unique] // المهنة بالعربية
  profession_name_en varchar(100) // المهنة بالإنجليزية
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table client_categories {
  category_id        int         [pk, increment]
  category_name_ar   varchar(50) [not null, unique] // تصنيف العميل بالعربية (VIP، عادي، ذهبي...)
  category_name_en   varchar(50) // تصنيف العميل بالإنجليزية
  discount_percentage decimal(5,2) [default: 0.00] // نسبة خصم خاصة بالفئة
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
}

Table clients {
  client_id          int         [pk, increment]
  client_code        varchar(20) [unique] // كود العميل
  client_name        varchar(100) [not null] // اسم العميل
  identity_type_id   int         [ref: > identity_types.identity_type_id] // نوع الهوية
  identity_number    varchar(50) [not null] // رقم الهوية
  nationality_id     int         [ref: > nationalities.nationality_id] // الجنسية
  mobile_number      varchar(20) // رقم الجوال
  work_phone         varchar(20) // هاتف عمل
  gender             enum('male', 'female') // الجنس
  profession_id      int         [ref: > professions.profession_id] // المهنة
  client_category_id int         [ref: > client_categories.category_id] // تصنيف العميل
  passport_number    varchar(50) // رقم الجواز للطيران
  correspondence_address text    // عنوان المراسل
  address            text        // العنوان
  add_tax_percentage boolean     [default: false] // إضافة الميل للضريبة
  
  // التواريخ الميلادية
  identity_expiry_gregorian date // انتهاء الهوية تاريخ ميلادي
  birth_date_gregorian     date  // تاريخ الميلاد الميلادي
  license_expiry_gregorian date  // انتهاء الرخصة تاريخ ميلادي
  
  // التواريخ الهجرية
  identity_expiry_hijri    varchar(20) // انتهاء الهوية هجري
  birth_date_hijri         varchar(20) // تاريخ الميلاد الهجري
  license_expiry_hijri     varchar(20) // انتهاء الرخصة هجري
  
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at         datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    identity_number [unique] // رقم الهوية يجب أن يكون فريد
  }
}

Table contracts {
  contract_id             int         [pk, increment]
  contract_number         varchar(50) [unique, not null]

  client_id               int         [ref: > clients.client_id, not null]
  car_id              int         [ref: > cars.car_id, not null]
  branch_id               int         [ref: > branches.branch_id, not null]

  contract_type           varchar(20)
  rental_type             varchar(20)
  rental_days             int
  kilometers_allowed      int
  daily_km_limit          int
  extra_km_price          decimal(10,2)

  start_datetime          datetime [not null]
  end_datetime            datetime [not null]
  start_datetime_hijri    varchar(20)
  end_datetime_hijri      varchar(20)

  insurance_type          varchar(20)
  daily_rate              decimal(10,2)
  discount                decimal(10,2)
  amount_due              decimal(10,2) [not null]
  amount_paid             decimal(10,2) [not null]
  payment_method_id       int [ref: > payment_methods.method_id]

  is_booking              boolean [default: false]
  notes                   text
  created_by              int [ref: > users.user_id]
  created_at              datetime [default: `CURRENT_TIMESTAMP`]
  updated_at              datetime [default: `CURRENT_TIMESTAMP`]

  indexes {
    // plate_number [unique] // رقم اللوحة يجب أن يكون فريد
  }
}

Table financial_transactions {
  transaction_id         int         [pk, increment]
  voucher_number         varchar(50) [unique, not null]
  transaction_type       enum('receipt', 'payment') [not null]
  amount                 decimal(10,2) [not null]
  transaction_datetime   datetime    [not null]
  status                 enum('pending', 'completed', 'cancelled') [default: 'completed']
  branch_id              int         [ref: > branches.branch_id, not null]
  created_by             int         [ref: > users.user_id, not null]
  created_at             datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at             datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (voucher_number)
    (transaction_datetime)
    (branch_id)
    (status)
  }
}

Table contract_transactions {
  contract_transaction_id int       [pk, increment]
  transaction_id         int        [ref: > financial_transactions.transaction_id]
  contract_id            int        [ref: > contracts.contract_id]
  operation_type         enum('new_contract', 'renewal', 'extension', 'payment', 'refund')
  paper_contract_number  varchar(50)
  
  indexes {
    (transaction_id) [unique]
    (contract_id)
    (operation_type)
  }
}

// إضافة جدول فئات المصاريف المفقود
Table expense_categories {
  category_id      int         [pk, increment]
  category_name_ar varchar(100) [not null] // اسم فئة المصروفات بالعربية
  category_name_en varchar(100) // اسم فئة المصروفات بالإنجليزية
  parent_id        int         [ref: > expense_categories.category_id] // للفئات الفرعية
  description      text        // وصف الفئة
  is_active        boolean     [default: true]
  created_at       datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at       datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (parent_id)
    (is_active)
  }
}

// تصحيح الإشارة في جدول expense_transactions
Table expense_transactions {
  expense_transaction_id int       [pk, increment]
  transaction_id         int       [ref: > financial_transactions.transaction_id]
  expense_category_id    int       [ref: > expense_categories.category_id]
  supplier_name          varchar(100)
  invoice_number         varchar(50)
  
  indexes {
    (transaction_id) [unique]
    (expense_category_id)
  }
}

// جدول تفاصيل الضرائب للمعاملات
Table transaction_taxes {
  tax_detail_id         int        [pk, increment]
  transaction_id        int        [ref: > financial_transactions.transaction_id]
  tax_id                int        [ref: > tax_settings.tax_id]
  tax_amount            decimal(10,2) [not null]
  tax_percentage        decimal(5,2)  [not null]
  
  indexes {
    (transaction_id)
  }
}

// جدول أرشفة العقود المنتهية
Table archived_contracts {
  archive_id              int         [pk, increment]
  original_contract_id    int         [not null] // المعرف الأصلي للعقد
  contract_number         varchar(50) [not null]
  client_id               int         [not null]
  car_id                  int         [not null]
  branch_id               int         [not null]
  contract_data           json        [not null] // بيانات العقد كاملة بتنسيق JSON
  start_datetime          datetime    [not null]
  end_datetime            datetime    [not null]
  archive_date            datetime    [default: `CURRENT_TIMESTAMP`]
  archived_by             int         [ref: > users.user_id]
  
  indexes {
    (original_contract_id) [unique]
    (contract_number)
    (client_id)
    (archive_date)
  }
}

// جدول أرشفة المعاملات المالية القديمة
Table archived_transactions {
  archive_id                int         [pk, increment]
  original_transaction_id   int         [not null] // المعرف الأصلي للمعاملة
  transaction_data          json        [not null] // بيانات المعاملة كاملة بتنسيق JSON
  archive_date              datetime    [default: `CURRENT_TIMESTAMP`]
  archived_by               int         [ref: > users.user_id]
  
  indexes {
    (original_transaction_id) [unique]
    (archive_date)
  }
}

// إضافة سياسة الأرشفة في جدول الإعدادات
Table system_settings {
  setting_id       int         [pk, increment]
  setting_key      varchar(50) [unique, not null]
  setting_value    text        [not null]
  setting_group    varchar(50) [not null]
  
  // إعدادات الأرشفة
  // archive_contracts_after_days: "365"
  // archive_transactions_after_days: "730"
  // archive_inactive_clients_after_days: "1095"
}

Table transaction_categories {
  category_id        int         [pk, increment]
  category_name      varchar(50) [not null]
  parent_id          int         [ref: > transaction_categories.category_id]
  affects_account_type enum('cash', 'client', 'expense', 'revenue') // نوع الحساب المتأثر
  is_active          boolean     [default: true]
  
  indexes {
    (parent_id)
    (is_active)
  }
}


Table accounts {
  account_id         int         [pk, increment]
  account_code       varchar(20) [unique, not null]
  account_name       varchar(100) [not null]
  account_type       enum('cash', 'client', 'user', 'expense', 'revenue', 'asset', 'liability', 'equity', 'other') [not null]
  category_id        int         [ref: > account_categories.category_id]
  sub_type           enum('system', 'client', 'user', 'bank', 'cash', 'other') [not null]
  related_client_id  int         [ref: > clients.client_id]
  related_user_id    int         [ref: > users.user_id]
  opening_balance    decimal(12,2) [default: 0.00]
  current_balance    decimal(12,2) [default: 0.00]
  is_active          boolean     [default: true]
  created_at         datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at         datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (account_type)
    (sub_type)
    (is_active)
    (related_client_id)
    (related_user_id)
  }
}

Table account_categories {
  category_id     int         [pk, increment]
  category_name   varchar(50) [not null]
  parent_id       int         [ref: > account_categories.category_id]
  is_active       boolean     [default: true]
  
  indexes {
    (parent_id)
    (is_active)
  }
}

Table tax_settings {
  tax_id          int         [pk, increment]
  tax_name        varchar(50) [not null]
  tax_percentage  decimal(5,2) [not null]
  is_active       boolean     [default: true]
  applies_to      enum('all', 'rentals', 'services') [default: 'all']
  start_date      date        [not null]
  end_date        date
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (is_active)
    (applies_to)
    (start_date, end_date)
  }
}

Table account_movements {
  movement_id        int         [pk, increment]
  account_id         int         [ref: > accounts.account_id]
  transaction_id     int         [ref: > financial_transactions.transaction_id]
  movement_type      enum('debit', 'credit') [not null]
  amount             decimal(10,2) [not null]
  previous_balance   decimal(12,2) [not null]
  new_balance        decimal(12,2) [not null]
  movement_date      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (account_id)
    (transaction_id)
    (movement_date)
    (movement_type)
  }
}

Table transaction_category_mapping {
  mapping_id         int         [pk, increment]
  transaction_id     int         [ref: > financial_transactions.transaction_id]
  category_id        int         [ref: > transaction_categories.category_id]
  
  indexes {
    (transaction_id)
    (category_id)
  }
}



Table payment_methods {
  method_id        int           [pk, increment]
  name_ar          varchar(50)   [not null]
  name_en          varchar(50)
  is_active        boolean       [default: true]
}


Table shift_handovers {
  handover_id       int [pk, increment]
  from_user_id      int [ref: > users.user_id]
  to_user_id        int [ref: > users.user_id]
  cash_amount       decimal(10,2)
  network_receipts  decimal(10,2)
  handover_time     datetime [default: `CURRENT_TIMESTAMP`]
  created_by        int [ref: > users.user_id]
}

Table administrative_expenses {
  expense_id        int [pk, increment]
  transaction_id    int [ref: > financial_transactions.transaction_id]
  category          varchar(100)
  description       text
  created_at        datetime [default: `CURRENT_TIMESTAMP`]
}



Table contract_payments_schedule {
  schedule_id     int         [pk, increment]
  contract_id     int         [ref: > contracts.contract_id, not null]
  payment_date    date        [not null]
  amount_due      decimal(10,2) [not null]
  status          enum('pending', 'paid', 'overdue', 'cancelled') [default: 'pending']
  transaction_id  int         [ref: > financial_transactions.transaction_id]
  reminder_sent   boolean     [default: false]
  notes           text
  created_at      datetime    [default: `CURRENT_TIMESTAMP`]
  updated_at      datetime    [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    (contract_id, payment_date)
    (status, payment_date)
  }
}